// src/config/appConfig.js
/**
 * Configuration centralis√©e de l'application KUYO
 * Adapt√©e pour Vite (import.meta.env au lieu de process.env)
 */

// Validation des variables d'environnement requises
const requiredEnvVars = [
  'VITE_GEMINI_API_KEY',
  'VITE_WEAVIATE_URL'
];

// V√©rification en mode d√©veloppement
if (import.meta.env.MODE === 'development') {
  const missingVars = requiredEnvVars.filter(
    varName => !import.meta.env[varName]
  );
  
  if (missingVars.length > 0) {
    console.warn('‚ö†Ô∏è Variables d\'environnement manquantes:', missingVars);
    console.warn('üìù Cr√©ez un fichier .env.local avec ces variables ou utilisez les valeurs par d√©faut');
  }
}

// Configuration principale
export const APP_CONFIG = {
  // Informations de l'application
  APP: {
    NAME: 'KUYO',
    VERSION: import.meta.env.VITE_APP_VERSION || '2.0.0',
    DESCRIPTION: 'Assistant Citoyen IA Ivoirien',
    ENV: import.meta.env.VITE_APP_ENV || import.meta.env.MODE || 'development',
    DEBUG: import.meta.env.VITE_DEBUG === 'true'
  },

  // Configuration API
  API: {
    GEMINI: {
      // üîë NE PAS mettre de cl√© en dur, on lit uniquement l'env
      API_KEY: import.meta.env.VITE_GEMINI_API_KEY || "",
      // ‚öôÔ∏è Endpoint align√© sur v1beta + mod√®le param√©trable (fallback flash)
      BASE_URL: `https://generativelanguage.googleapis.com/v1beta/models/${
        import.meta.env.VITE_GEMINI_MODEL || 'gemini-1.5-flash'
      }:generateContent`,
      ENABLED: import.meta.env.VITE_USE_GEMINI !== 'false' // true par d√©faut
    },
    WEAVIATE: {
      URL: import.meta.env.VITE_WEAVIATE_URL || 'http://localhost:8080/v1/graphql',
      TIMEOUT: 10000 // 10 secondes
    }
  },

  // Seuils et limites
  THRESHOLDS: {
    RELEVANCE: parseFloat(import.meta.env.VITE_RELEVANCE_THRESHOLD) || 0.3,
    CERTAINTY: parseFloat(import.meta.env.VITE_CERTAINTY_THRESHOLD) || 0.7
  },

  LIMITS: {
    MAX_CONCEPTS: parseInt(import.meta.env.VITE_MAX_CONCEPTS) || 10,
    DEFAULT_RESULTS: parseInt(import.meta.env.VITE_DEFAULT_LIMIT) || 5,
    MAX_MESSAGE_LENGTH: 500,
    MAX_SESSIONS: 50,
    MAX_HISTORY_PER_SESSION: 100
  },

  // Configuration UI
  UI: {
    ANIMATION_DURATION: 300,
    TYPING_DELAY: 500,
    AUTO_SCROLL_DELAY: 100,
    PARTICLES_COUNT: parseInt(import.meta.env.VITE_PARTICLES_COUNT) || 50,
    SIDEBAR_WIDTH: 320
  },

  // Messages par d√©faut
  MESSAGES: {
    WELCOME: "üéâ Bienvenue sur KUYO ! Je suis votre assistant IA personnalis√© pour les services publics ivoiriens.",
    ERROR_NETWORK: "‚ùå Erreur de connexion. V√©rifiez votre connexion internet.",
    ERROR_API: "‚ö†Ô∏è Erreur technique. Veuillez r√©essayer dans quelques instants.",
    NO_RESULTS: "ü§î Je n'ai pas trouv√© d'information sp√©cifique. Reformulez votre question.",
    TYPING: "KUYO r√©fl√©chit...",
    NEW_SESSION: "üéØ Nouvelle session d√©marr√©e ! Comment puis-je vous aider ?"
  },

  // Mots vides fran√ßais (pour l'extraction de concepts)
  STOPWORDS: new Set([
    "faire", "demande", "comment", "pour", "obtenir", "est", "le", "la", "un", "une", 
    "des", "de", "du", "et", "√†", "ce", "que", "qui", "avec", "dans", "sur", "par", 
    "son", "sa", "ses", "ma", "mon", "mes", "ta", "ton", "tes", "nous", "vous", "ils",
    "elle", "elles", "ou", "o√π", "mais", "donc", "car", "puis", "alors", "ainsi",
    "avoir", "√™tre", "aller", "venir", "voir", "savoir", "vouloir", "pouvoir", "devoir"
  ])
};

// Fonction utilitaire pour v√©rifier la configuration
export const validateConfig = () => {
  const errors = [];

  if (!APP_CONFIG.API.GEMINI.API_KEY) {
    errors.push('Cl√© API Gemini manquante');
  }

  if (!APP_CONFIG.API.WEAVIATE.URL) {
    errors.push('URL Weaviate manquante');
  }

  return {
    isValid: errors.length === 0,
    errors
  };
};

// Log de la configuration en d√©veloppement
if (import.meta.env.MODE === 'development') {
  console.log('üìã KUYO Config loaded:', {
    mode: APP_CONFIG.APP.ENV,
    version: APP_CONFIG.APP.VERSION,
    geminiEnabled: APP_CONFIG.API.GEMINI.ENABLED,
    weaviateUrl: APP_CONFIG.API.WEAVIATE.URL,
    particlesCount: APP_CONFIG.UI.PARTICLES_COUNT
  });
  
  const validation = validateConfig();
  if (!validation.isValid) {
    console.warn('‚ö†Ô∏è Configuration issues:', validation.errors);
  } else {
    console.log('‚úÖ Configuration is valid');
  }
}

// Export par d√©faut
export default APP_CONFIG;
